@model List<Matratt>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@{
	//ViewData["Title"] = "Alla maträtter";
}

@functions
{

	public string GetAntiXsrfRequestToken()
	{
		return Xsrf.GetAndStoreTokens(Context).RequestToken;
	}

}

@section Scripts {
<script type="text/javascript">
		$(function() {
			$('.popover-button').popover();
		});

		function UpdateCartSize(size) {
			
		}

		function AddToCartOnSuccess(elem, name, count) {
			var plural = (count == 1 ? " rätt" : " rätter");

			$(elem).popover('dispose');
			$(elem).popover({
				trigger: "focus",
				content: "<strong>" + name + "</strong> har lagts till i din kundvagn.<br>Du har nu <span class='badge badge-light'>" + count + "</span>" + plural + " i din kundvagn.",
				html: true
			});
			$(elem).popover('show');
			$("#cartSize").text(count + plural);
		}

		function AddToCartOnFailure(elem, name) {
			$(elem).popover({
				trigger: "focus",
				content: "Något gick fel vid försök att lägga till " + name + " i din kundvagn."
			});
		}

		function AddToCartAjax(elem, id, name) {
			$.ajax({
				type: "post",
				dataType: "json",
				headers: {
					"RequestVerificationToken": '@GetAntiXsrfRequestToken()'
				},
				url: '@Url.Action("AddToCart", "Tomasos")?id=' + id,
				success: function (result) {
					console.log(result);
					if (result.success)
						AddToCartOnSuccess(elem, name, result.cartSize);
					else
						AddToCartOnFailure(elem, name);
				},
				error: function (err, scnd) {
					console.error(err);
					AddToCartOnFailure(elem, name);
				}
			});
		}
</script>
}

@if (Model.Count == 0)
{
	<p>
		<i>Det finns inga maträtter inom denna kategori.</i>
	</p>
}
else
{
	foreach (Matratt mat in Model.OrderBy(m => m.MatrattTypNavigation.Beskrivning).ThenBy(m => m.MatrattNamn))
	{
		<section class="mat">
			<div class="mat-head">
				<h2 class="mat-name">@mat.MatrattNamn <span class="mat-type">@mat.MatrattTypNavigation.Beskrivning</span>
				</h2>
				<div class="mat-head-right text-right">
					<div class="h4 m-0">
					<span class="mat-price"><span class="badge badge-secondary p-1">@mat.Pris.ToString("C")</span>
					</span>
						<button type="button" class="btn btn-info badge h3 p-1"
						        data-trigger="manual"
						        data-toggle="popover"
						        onclick="AddToCartAjax(this, @mat.MatrattId, '@mat.MatrattNamn')">Lägg till i kundvagn</button>
					</div>
					<div class="mat-add">
						@if (User.IsInRole(UserRole.Admin))
						{
							<a class="btn btn-warning badge" asp-controller="Admin" asp-action="AlterPizza" asp-route-id="@mat.MatrattId"> Ändra</a>
							<a class="btn btn-danger badge" asp-controller="Admin" asp-action="RemovePizza" asp-route-id="@mat.MatrattId">Ta bort</a>
						}
					</div>
				</div>
			</div>
			<div class="mat-body">
				<div class="mat-ingredients">
					<strong>Ingredienser</strong>
					<ul>
						@foreach (MatrattProdukt nav in mat.MatrattProdukt)
						{
							<li>@nav.Produkt.ProduktNamn</li>
						}
					</ul>
				</div>
				<div class="mat-desc">@mat.Beskrivning</div>
			</div>
		</section>
	}
}